type Query{
    userWallets : [Wallet],
    walletById(id: String) : Wallet
    currencies: [Currency]
}

type Mutation{
    addWallet(wallet: WalletDTO): Wallet
    transfer(transfer: TransferDTO): [Wallet]
}

input WalletDTO{
        balance: Float,
        currencyCode: String
}

input TransferDTO{
    sourceId: String,
    destinationId: String,
    amount: Float
}

type Wallet{
    id: ID,
    userId: String,
    balance: Float,
    createdAt: Int,
    currency: Currency
    walletTransactions: [WalletTransaction]
}

type Currency{
    code: ID,
    name: String,
    symbol: String,
    salePrice: Float,
    purchasePrice: Float
}

type WalletTransaction{
    id: ID,
    timestamp: Float,
    wallet: Wallet,
    amount: Float,
    saleCurrencyPrice: Float,
    purchaseCurrencyPrice: Float,
    type: String
}